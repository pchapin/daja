<?xml version="1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>

<!-- FILE    : Daja.xml
     SUBJECT : Master document for the Daja documentation set.
     AUTHOR  : (C) Copyright 2024 by Peter Chapin <peter.chapin@vermontstate.edu>

This is the documentation for the Daja D compiler. -->

<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1" status="draft">
  <info>
    <title>Daja</title>
    <author>
      <personname><firstname>Peter</firstname> <surname>Chapin</surname></personname>
      <affiliation>
        <orgname>Vermont State University</orgname>
        <orgdiv>Computer Information Systems Department</orgdiv>
      </affiliation>
    </author>
    <authorinitials>pcc</authorinitials>
    <copyright>
      <year>2024</year>
      <holder>Peter Chapin</holder>
    </copyright>
    <legalnotice>
      <para> Permission is granted to copy, distribute and/or modify this document under the
        terms of the GNU Free Documentation License, Version 1.1 or any later version published
        by the Free Software Foundation; with the Invariant Sections being LIST THEIR TITLES,
        with the Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST. A copy
        of the license is included in the section entitled "GNU Free Documentation License".
      </para>
    </legalnotice>
    <!-- Do we really want to include this revision history now? -->
    <revhistory>
      <revision>
        <revnumber>1.0</revnumber>
        <date>2024-12-31</date>
        <authorinitials>pcc</authorinitials>
        <revremark>This is a work in progress. Release 1.0 is scheduled for the end of
          2024.</revremark>
      </revision>
    </revhistory>
  </info>
  <preface xml:id="Introduction">
    <title>Introduction</title>

    <para>Daja is an open source D compiler developed as a personal project by me, Peter C.
      Chapin. I created Daja primarily to support the compiler design course at Vermont State
      University, and thus it is intended to be an educational compiler. However, it is also my
      hope that Daja may eventually provide another option for those interested in using an open
      source D compiler. Although the existing D compilers are all fine products, I believe in
      the value of diversity when it comes to available programming tools.</para>

    <para>Daja is written primarily in the Scala programming language. I chose Scala because it
      is a functional language, and thus supports features that I believe will be helpful for
      compiler construction (such as algebraic data types and pattern matching). Also the use of
      Scala fits well into the context of my compiler design course. Accordingly, it is my
      intention to write Daja in as purely a functional style as feasible with the hope that
      doing so will make the code more understandable, more reliable, and more amenable to
      parallelization. In addition, Scala gives me access to an enormous collection of Java
      libraries, tools, and technologies, many of which are very powerful and highly mature. I
      intend to capitalize on that legacy as much as possible during the development of
      Daja.</para>

    <para>I understand that Scala is an unusual choice as an implementation language for a D
      compiler. I understand that I would be more likely to attract help from the D community if
      I wrote Daja in D. However, as a personal project I have the luxury of selecting tools
      that interest me even if they might not be strategically optimal. I hope my choice of
      Scala pays off in the long run. If the compiler is easier to write or if Daja eventually
      becomes a bridge between the Scala/Java and D communities, my choice might prove to be
      strategic after all.</para>

    <para>Daja is intended to target the Java Virtual Machine. This allows me to defer the
      details of hardware code generation and optimization to the JVM. The JVM also provides
      automatic support for certain services such as garbage collection.</para>

    <para>However, as a concession to educational practicalities, Daja currently has multiple
      code generating modes that include the generation of C or LLVM assembly language. It also
      supports an interpretive mode. It is likely that support for some or all of these
      additional modes will be dropped as Daja matures since developing and maintaining multiple
      code generators adds considerably to the work involved in building Daja. However, these'
      options remain on the table for now.</para>

    <para>I anticipate that as Daja matures others will become attracted to the project and may
      join the effort. For this reason, along with the fact that many of my students have
      contributed to this project, aside from this introduction, the documentation is written as
      if it is being authored by a group of contributors rather than just a single
      person.</para>

    <para>This documentation describes both the design and use of the Daja compiler.</para>

    <!-- Include disclaimer. -->

  </preface>

  <xi:include href="Vision.xml"/>
  <xi:include href="Build.xml"/>
  <xi:include href="User.xml"/>
  <xi:include href="Requirements.xml"/>
  <xi:include href="Design.xml"/>

  <!-- <bibliography> ... </bibliography> -->

</book>
